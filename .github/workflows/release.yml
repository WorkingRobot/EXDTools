name: Release Tools
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Define version
        id: define-version
        run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'
      - name: Publish Linux
        run: dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true -p:DebugType=embedded --self-contained false
      - name: Publish Windows
        run: dotnet publish -c Release -r win-x64 -p:PublishSingleFile=true -p:DebugType=embedded --self-contained false
      - name: Create Release
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          mkdir release-out
          zip -j release-out/BasicSchemaGenerator-win-x64.exe BasicSchemaGenerator/bin/Release/net7.0/win-x64/publish/BasicSchemaGenerator.exe
          zip -j release-out/DirectoryManager-win-x64.exe DirectoryManager/bin/Release/net7.0/win-x64/publish/DirectoryManager.exe
          zip -j release-out/SchemaConverter-win-x64.exe SchemaConverter/bin/Release/net7.0/win-x64/publish/SchemaConverter.exe
          zip -j release-out/SchemaValidator-win-x64.exe SchemaValidator/bin/Release/net7.0/win-x64/publish/SchemaValidator.exe
          zip -j release-out/BasicSchemaGenerator-linux-x64 BasicSchemaGenerator/bin/Release/net7.0/linux-x64/publish/BasicSchemaGenerator
          zip -j release-out/DirectoryManager-linux-x64 DirectoryManager/bin/Release/net7.0/linux-x64/publish/DirectoryManager
          zip -j release-out/SchemaConverter-linux-x64 SchemaConverter/bin/Release/net7.0/linux-x64/publish/SchemaConverter
          zip -j release-out/SchemaValidator-linux-x64 SchemaValidator/bin/Release/net7.0/linux-x64/publish/SchemaValidator
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release-out/**
          name: Release for ${{ steps.define-version.outputs.version }}
          tag_name:  ${{ steps.define-version.outputs.version }}